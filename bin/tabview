#!/usr/bin/env python
# -*- coding: utf-8 -*-

""" tabview -- View a tab-delimited file in a spreadsheet-like display.
  Scott Hansen <firecat four one five three at gmail dot com>
  Based on code contributed by A.M. Kuchling <amk at amk dot ca>

  Usage:
      From command line:  tabview <filename>
      From python command line to view an object:
          import tabview.tabview as t
          a = [["a","b","c"], ["d","e","f"]]
          t.view(a)
      From python command line to view a file:
          import tabview.tabview as t
          t.view(fn=<filename>[, enc=<encoding>])

"""
from __future__ import print_function, unicode_literals
import argparse
from tabview.tabview import readme, view


def arg_parse():
    """Parse filename and show help. Assumes README is in the same
    directory as tabview.py

    """
    parser = argparse.ArgumentParser(formatter_class=
                                     argparse.RawDescriptionHelpFormatter,
                                     description="".join(readme()))
    parser.add_argument('filename')
    parser.add_argument('--encoding', '-e', help="Encoding, if required.  "
                        "If the file is UTF-8, Latin-1(iso8859-1) or a few "
                        "other common encodings, it should be detected "
                        "automatically. If not, you can pass "
                        "'CP720', or 'iso8859-2', for example.")
    parser.add_argument('--start_pos',
                        help="Initial cursor display position. "
                        "Single number for just y (row) position, or two "
                        "comma-separated numbers (--start_pos 2,3) for both. "
                        "Alternatively, you can pass the numbers in the more "
                        "classic +y:[x] format without the --start_pos label. "
                        "Like 'tabview <fn> +5:10'")
    return parser.parse_known_args()

if __name__ == '__main__':
    args, extra = arg_parse()
    pos_plus = [i for i in extra if i.startswith('+')]
    if args.start_pos is not None:
        start_pos = args.start_pos.split(',')[:2]
        start_pos = [int(i) for i in start_pos]
    elif pos_plus:
        sp = pos_plus[0].strip('+').split(':')
        try:
            start_pos = (int(sp[0]), int(sp[1]))
        except IndexError:
            start_pos = (int(sp[0]), 0)
    else:
        start_pos = (0, 0)
    view(args.filename, enc=args.encoding, start_pos=start_pos)
